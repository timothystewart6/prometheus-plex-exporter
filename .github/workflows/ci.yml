name: CI

on:
  push:
    branches: [main]
  pull_request:

permissions:
  contents: read

jobs:
  test:
    name: Unit tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: 1.23.0
          cache: false
      - run: go test -v -mod vendor ./...
        env:
          CGO_ENABLED: "0"
      - name: Run vendor package tests
        run: |
          # Run tests that live in the vendor directory. These validate fixes in the vendored client.
          go test -v ./vendor/...
        env:
          CGO_ENABLED: "0"

  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
          - goos: darwin
            goarch: amd64
          - goos: darwin
            goarch: arm64
          - goos: windows
            goarch: amd64
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-go@v5
      with:
        go-version: 1.23.0
        cache: false
    - run: go build -mod vendor -o ./bin/prometheus-plex-exporter ./cmd/prometheus-plex-exporter
      env:
        CGO_ENABLED: "0"
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
    - uses: actions/upload-artifact@v4
      with:
        name: prometheus-plex-exporter-${{ matrix.goos }}-${{ matrix.goarch}}
        path: ./bin

  release-notes:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: write
    steps:
      - uses: release-drafter/release-drafter@v6
        with:
          disable-autolabeler: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    name: Build and push container images
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get short commit SHA
        id: vars
        run: echo "sha=$(echo $GITHUB_SHA | cut -c1-7)" >> $GITHUB_OUTPUT

      - name: Build and push image (latest + commit SHA)
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./cmd/prometheus-plex-exporter/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ghcr.io/${{ github.repository_owner }}/prometheus-plex-exporter:latest
            ghcr.io/${{ github.repository_owner }}/prometheus-plex-exporter:${{ steps.vars.outputs.sha }}